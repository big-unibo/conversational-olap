plugins {
    id 'java-library'
    id 'war'
    id 'antlr'
    id 'org.jetbrains.kotlin.jvm' version '2.0.21'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

shadowJar {
    zip64 true
}

java { toolchain {languageVersion = JavaLanguageVersion.of(14) } }

kotlin { jvmToolchain { languageVersion.set(JavaLanguageVersion.of(14)) } }

compileJava {
    dependsOn generateGrammarSource
    sourceCompatibility = '14'
    targetCompatibility = '14'
}

compileKotlin {
    dependsOn generateGrammarSource
    kotlinOptions {
        jvmTarget = "14"
    }
}

compileTestKotlin {
    dependsOn generateGrammarSource
    kotlinOptions {
        jvmTarget = "14"
    }
}

repositories {
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

dependencies {
    antlr "org.antlr:antlr4:4.13.2"
    implementation 'org.antlr:antlr4:4.13.2'
    implementation 'javax:javaee-api:8.0.1'
    implementation 'io.ktor:ktor-server-servlet:3.1.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-cli:0.3.6'
    implementation 'commons-cli:commons-cli:1.9.0'
    implementation "com.github.holgerbrandl:krangl:0.18.4"
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.nield:kotlin-statistics:1.2.1'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'com.github.haifengl:smile-core:2.6.0'
    implementation 'org.jgrapht:jgrapht-core:1.5.2'
    implementation 'edu.stanford.nlp:stanford-corenlp:4.5.10'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'org.slf4j:slf4j-api:2.0.17'
    implementation 'org.slf4j:slf4j-log4j12:2.0.17'
    implementation 'org.json:json:20250517'
    implementation "org.apache.commons:commons-math3:3.6.1"
    implementation 'com.google.guava:guava:33.4.8-jre'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.19.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.19.0'
    implementation 'com.oracle.ojdbc:ojdbc8:19.3.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.4'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.4'
}

generateGrammarSource {
    outputDirectory = file("src/main/java/it/unibo/antlr/gen")
    arguments += ["-visitor"]
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
    maxParallelForks = 1
    jvmArgs "-Xmx4g"
}

task runDBreader(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "it.unibo.conversational.database.DBreader"
    jvmArgs = ['-Xmx12g']
}

task runValidatorSequential(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "it.unibo.conversational.Validator"
    args = ["sequential"]
    jvmArgs = ['-Xmx12g']
}

task runValidator(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "it.unibo.conversational.Validator"
    jvmArgs = ['-Xmx12g']
}

defaultTasks 'clean', 'build', 'check', 'war', 'shadowJar'
